back=\ 0. Back
exit=\ 0. Exit
login=\ 1. Login |
logout=\ 9. Log out |
main.choices.super=\ 12. reset |
main.choices.admin=\ 9. Admin menu |
main.choices.reader=\ 4. Borrowings |
main.choices.visitor=\ 2. Books | 3. Novels |
item.req.author=Type the name of the author you want to search:
novels.choices.employee=\n5. Register Novel | 6. Update Novel | 7. Delete Novel |
novels.choices.reader=\ 4. Borrow a Novel |
novels.req.borrowId=Type the id of the novel you want to borrow:
novels.req.data=Type the new data for the novel:
novels.req.deleteId=Type the id of the novel you want to delete:
novels.req.updateId=Type the id of the novel you want to update:
novels.res.borrowBad=Can''t borrow this novel.
novels.res.borrowOk=Novel added, go to the Borrowings menu to complete the request
novels.choices.visitor=\ 1. List Novels | 2. List authors | 3. Search by author |
unknownOption=Unknown menu option
welcome=Welcome to La Pingüinera library!!
login.choices.visitor=Login menu: 1. Login with email | 2. Register | 0. Back
login.req.password=Password: 
login.res.loginBad=Couldn't log in, invalid email or password
login.res.loginOk=Successful login as: 
user.req.name=Name: 
user.req.email=Email: 
user.req.biography=Biography: 
user.req.birthday=Birthday: 
login.res.registerBad=Couldn't register user, 
borrowings.choices.reader=\ 1. List selected items | 2. List all borrowings | 3. Show borrowing details | 4. Confirm request |
borrowings.choices.employee=\n5. Search by email | 6. Confirm borrowing | 7. Finalize borrowing | 8. Delete borrowing |
borrowings.info.list=Borrowings list: 
borrowings.info.items=Selected items pending to confirm request: 
borrowings.req.id=Type the id of the borrowing you want to see its details
borrowings.info.details=Borrowing details: 
borrowings.out.detailsBad=Couldn't get borrowing details,
borrowings.info.requesting=Requesting selected items
borrowings.req.dueDate=Type the due date before all the items must be returned:
borrowings.res.createOk=Successful request, find an employee to borrow the items from
borrowings.res.createBad=Couldn't request the borrowing, 
borrowings.req.userId=Type the email of the user you want to list its borrowings
borrowings.res.userList=List of borrowings made by: 
borrowings.req.confirmId=Type the id of the borrowing you want to confirm as delivered
borrowings.res.confirmOk=Borrowing confirmed successfully
borrowings.res.confirmBad=Couldn't confirm this borrowing, 
borrowings.req.finalizeId=Type the id of the borrowing you want to finalize
borrowings.res.finalizeOk=Borrowing finalized successfully
borrowings.res.finalizeBad=Couldn't finalize this borrowing, 
borrowings.req.deleteId=Type the id of the borrowing you want to delete
borrowings.res.deleteOk=Borrowing deleted successfully
borrowings.res.noCopies=\ has no copies available
borrowings.res.bookNotFound=Book with id {0} not found
# are used but the string splits
borrowings.res.novelNotFound=Novel with id {0} not found

personalInfo.choices.user = \ 1. See personal info | 2. Edit personal info | 3. Add personal info  |  
personalInfo.req.biography = Enter biography: 
personalInfo.req.name = Enter name: 
personalInfo.req.birthday = Enter birthday (yyyy-mm-dd): 
personalInfo.req.email = Enter email: 

videos.choices.visitor=\ 1. List Videos | 2. List authors | 3. Search by author |
videos.choices.reader=4. Borrow a Video |
videos.choices.employee=\n5. Register Video | 6. Update Video | 7. Delete Video |
videos.req.updateId=Type the id of the video you want to update: 
videos.req.videoData=Type the new data for the video: 
videos.req.deleteId=Type the id of the video you want to delete: 
videos.req.toBorrowId=Type the id of the video you want to borrow: 
videos.res.borrowingOk=Video added, go to the Borrowings menu to complete the request
videos.res.borrowingBad=Can''t borrow this video. 
songs.choices.visitor=\ 1. List Songs | 2. List authors | 3. Search by author |
songs.choices.reader=4. Borrow a Song |
songs.choices.employee=\n5. Register Song | 6. Update Song | 7. Delete Song |
songs.req.updateId=Type the id of the song you want to update: 
songs.req.songData=Type the new data for the song: 
songs.req.deleteId=Type the id of the song you want to delete: 
songs.req.toBorrowId=Type the id of the song you want to borrow: 
songs.res.borrowingOk=Song added, go to the Borrowings menu to complete the request
songs.res.borrowingBad=Can''t borrow this song. 
essays.choices.visitor=\ 1. List Essays | 2. List authors | 3. Search by author |
essays.choices.reader=4. Borrow an Essay |
essays.choices.employee=\n5. Register Essay | 6. Update Essay | 7. Delete Essay |
essays.req.updateId=Type the id of the essay you want to update: 
essays.req.essayData=Type the new data for the essay: 
essays.req.deleteId=Type the id of the essay you want to delete: 
essays.req.toBorrowId=Type the id of the essay you want to borrow: 
essays.res.borrowingOk=Essay added, go to the Borrowings menu to complete the request
essays.res.borrowingBad=Can''t borrow this essay. 
books.choices.visitor=\ 1. List Books | 2. List authors | 3. Search by author |
books.choices.reader=4. Borrow a Book |
books.choices.employee=\n5. Register Book | 6. Update Book | 7. Delete Book |
books.req.updateId=Type the id of the book you want to update: 
books.req.bookData=Type the new data for the book: 
books.req.deleteId=Type the id of the book you want to delete: 
books.req.toBorrowId=Type the id of the book you want to borrow: 
books.res.borrowingOk=Book added, go to the Borrowings menu to complete the request
books.res.borrowingBad=Can''t borrow this book. 
admin.choices.admin=\ 1. List users | 2. Create employee user | 3. Update user | 4. Delete user | 5. Export inventory data | 6. Import inventory data |
admin.info.usersList=List of users: 
admin.req.createId=Enter the employee user data: 
admin.res.registerOk=User created successfully
super.choices = 11. Reset
admin.res.registerBad=Couldn't register employee user, 
admin.req.updateId=Type the id of the user you want to update: 
admin.res.updateOk=User updated successfully
admin.res.updateBad=Couldn't update the user, 
admin.req.role=Choose a role: 1. READER | 2. EMPLOYEE | 3. ADMIN
admin.res.badRole=Unknown role choice
admin.req.deleteId=Type the id of the user you want to delete: 
admin.res.deleteOk=User deleted successfully
admin.res.deleteBad=Couldn''t delete the user, {0}
main.keyword=Main
main.menu.name={0} menu:
main.res.exportBad=Couldn't export data, 
admin.info.exporting=Exporting library items data to file
admin.req.exportName=Enter the name you want for the export file:
admin.res.exportOk=Successful export to: 
admin.info.importing=Importing library items from file
admin.req.importName=Enter the name of the file to import from:
admin.res.importOk=Successful import of data from : 
admin.res.importBad=Couldn't import data, 